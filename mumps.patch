diff -Naur MUMPS_4.8.2/src/mumps_io.c MUMPS/src/mumps_io.c
--- MUMPS_4.8.2/src/mumps_io.c	Tue Sep 16 09:40:14 2008
+++ MUMPS/src/mumps_io.c	Fri Sep 19 07:20:05 2008
@@ -82,10 +82,9 @@
     break;
 #endif
   default:
-    *ierr=-92;
-    char buf[64];
+    { char buf[64];
     sprintf(buf,"Error: unknown I/O strategy : %d\n",mumps_io_flag_async);
-    mumps_io_error(*ierr,buf);
+    mumps_io_error(*ierr,buf); }
     return;
   }
 #if ! defined(MUMPS_WIN32)
@@ -115,9 +114,9 @@
 #endif
   default:
     *ierr=-92;
-    char buf[64];
+    { char buf[64];
     sprintf(buf,"Error: unknown I/O strategy : %d\n",mumps_io_flag_async);
-    mumps_io_error(*ierr,buf);
+    mumps_io_error(*ierr,buf); }
     return;
     /*    printf("Error: unknown I/O strategy : %d\n",mumps_io_flag_async);
           exit (-3);*/
@@ -233,9 +232,9 @@
 #endif
     default:
       *ierr=-92;
-      char buf[64];
+      { char buf[64];
       sprintf(buf,"Error: unknown I/O strategy : %d\n",*async);
-      mumps_io_error(*ierr,buf);
+      mumps_io_error(*ierr,buf); }
       return;
     }
   }
@@ -280,9 +279,9 @@
 #endif
      default:
        *ierr=-91;
-       char buf[64];
+       { char buf[64];
        sprintf(buf,"Error: unknown I/O strategy : %d\n",*strat_IO);
-       mumps_io_error(*ierr,buf);
+       mumps_io_error(*ierr,buf); }
        return;
      }
    }else{
@@ -327,9 +326,9 @@
 #endif
       default:
         *ierr=-91;
-        char buf[64];
+        { char buf[64];
         sprintf(buf,"Error: unknown I/O strategy : %d\n",*strat_IO);
-        mumps_io_error(*ierr,buf);
+        mumps_io_error(*ierr,buf); }
         return;
       }
   }else{
@@ -397,9 +396,9 @@
 #endif
   default:
     *ierr=-91;
-    char buf[64];
+    { char buf[64];
     sprintf(buf,"Error: unknown I/O strategy : %d\n",mumps_io_flag_async);
-    mumps_io_error(*ierr,buf);
+    mumps_io_error(*ierr,buf); }
     return;
   }
   mumps_free_file_pointers(step);
@@ -433,9 +432,9 @@
 #endif
   default:
     *ierr=-91;
-    char buf[64];
+    { char buf[64];
     sprintf(buf,"Error: unknown I/O strategy : %d\n",mumps_io_flag_async);
-    mumps_io_error(*ierr,buf);
+    mumps_io_error(*ierr,buf); }
     return;
   }
   return;
@@ -510,9 +509,9 @@
 #endif
     default:
       *ierr=-91;
-      char buf[64];
+      { char buf[64];
       sprintf(buf,"Error: unknown I/O strategy : %d\n",mumps_io_flag_async);
-      mumps_io_error(*ierr,buf);
+      mumps_io_error(*ierr,buf); }
       return;
     }
   }
diff -Naur MUMPS_4.8.2/src/mumps_io_basic.c MUMPS/src/mumps_io_basic.c
--- MUMPS_4.8.2/src/mumps_io_basic.c	Tue Sep 16 09:40:14 2008
+++ MUMPS/src/mumps_io_basic.c	Fri Sep 19 07:20:05 2008
@@ -308,9 +308,9 @@
   }
   if(to_be_written!=0){
     *ierr = -90;
-    char buf[64];
+    { char buf[64];
     sprintf(buf,"Internal (1) error in low-level I/O operation %lf",to_be_written);
-    return mumps_io_error(*ierr,buf);
+    return mumps_io_error(*ierr,buf); }
   }
   /* printf("write ok -> %d \n");*/
   return 0;
diff -Naur MUMPS_4.8.2/src/mumps_io_err.c MUMPS/src/mumps_io_err.c
--- MUMPS_4.8.2/src/mumps_io_err.c	Tue Sep 16 09:40:14 2008
+++ MUMPS/src/mumps_io_err.c	Fri Sep 19 07:28:25 2008
@@ -110,8 +110,8 @@
   mumps_io_protect_err();
 #endif
   if(err_flag==0){
-    strncpy(mumps_err, desc, mumps_err_max_len);
     int len = strlen(desc);
+    strncpy(mumps_err, desc, mumps_err_max_len);
     *dim_mumps_err = (len <= mumps_err_max_len ) ? len : mumps_err_max_len;
     err_flag = mumps_errno;
   }
@@ -127,8 +127,12 @@
   mumps_io_protect_err();
 #endif
   if(err_flag==0){
-    snprintf(mumps_err, mumps_err_max_len, "%s: %s", desc, strerror(errno));
     int len = strlen(desc) + 2 + strlen(strerror(errno));
+#if ! defined( MUMPS_WIN32 ) 
+    snprintf(mumps_err, mumps_err_max_len, "%s: %s", desc, strerror(errno));
+#else
+    sprintf(mumps_err, "%s: %s", desc, strerror(errno));
+#endif
     *dim_mumps_err = (len <= mumps_err_max_len ) ? len : mumps_err_max_len;
     err_flag = mumps_errno;
   }
